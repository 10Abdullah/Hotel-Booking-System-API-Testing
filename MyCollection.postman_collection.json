{
	"info": {
		"_postman_id": "825fcc67-1eb4-4e39-a586-18c57a98573f",
		"name": "MyCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26179406"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"Booking_ID\",jsonData.bookingid)\r",
							"\r",
							"pm.test(\"Booking Status checked successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"var price = parseInt(totalPrice)\r",
							"pm.environment.set(\"totalPrice\", price)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\", Boolean(depositPaid))\r",
							"\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"const today = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\", today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\", today.add(5,'d').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomLoremWords}}\")\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : \"{{totalPrice}}\",\r\n\t\"depositpaid\" : \"{{depositPaid}}\",\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function () {\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function () {\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Total Price Validation\", function () {\r",
							"            pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"totalPrice\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Deposit Paid Price Validation\", function () {\r",
							"            pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"depositPaid\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkin Validation\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkout Validation\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
							"        })\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\", function(){\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"));\r",
							"        })\r",
							"\r",
							"    break;\r",
							"\r",
							"    case 404: \r",
							"    pm.test(\"Something went wrong\", function(){\r",
							"\r",
							"    })\r",
							"    break;\r",
							"    case 404: \r",
							"    pm.test(\"Something went wrong\", function(){\r",
							"        \r",
							"    })\r",
							"    break;\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{Booking_ID}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{Booking_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Token_ID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"Mohammad\",\r\n\t\"lastname\" : \"Abdullah\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/{{Booking_ID}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{Booking_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"Token_ID\",jsonData.token)\r",
							"\r",
							"pm.test(\"Token is created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/auth",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Token_ID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/{{Booking_ID}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{Booking_ID}}"
					]
				}
			},
			"response": []
		}
	]
}